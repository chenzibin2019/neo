##
## Network configuration
##

[[nodes]]
    name = "string"
    type = "generic" or "middlebox" # default: generic
    [[nodes.interfaces]]        # optional
    name = "string"
    ipv4 = "x.x.x.x/x"          # optional
    vlans = [1, 3, 6, 100]      # optional
    [[nodes.static_routes]]     # optional
    network = "x.x.x.x/x"
    next_hop = "x.x.x.x"
    adm_dist = 1                # optional (0..255), default: 1
    [[nodes.installed_routes]]  # optional
    network = "x.x.x.x/x"
    next_hop = "x.x.x.x"
    adm_dist = 255              # optional (0..255), default: 255
[[nodes]]
    name = "string"
    type = "middlebox"
    env = "netns"
    app = "netfilter"
    timeout = 100               # microseconds
    rp_filter = 0               # optional (0..2), default: 0
    # 0 - No source validation.
    # 1 - Strict mode as defined in RFC3704 Strict Reverse Path
    #     Each incoming packet is tested against the FIB and if the interface
    #     is not the best reverse path the packet check will fail.
    #     By default failed packets are discarded.
    # 2 - Loose mode as defined in RFC3704 Loose Reverse Path
    #     Each incoming packet's source address is also tested against the FIB
    #     and if the source address is not reachable via any interface the
    #     packet check will fail.
    rules = ".*"
[[nodes]]
    name = "string"
    type = "middlebox"
    env = "netns"
    app = "ipvs"
    timeout = 100               # microseconds
    config = ".*"
[[nodes]]
    name = "string"
    type = "middlebox"
    env = "netns"
    app = "squid"
    timeout = 100               # microseconds
    config = ".*"

# undirected (only need to specify once for each link)
[[links]]
    node1 = "name"
    intf1 = "name"
    node2 = "name"
    intf2 = "name"


##
## Policies
##

#
# Single-communication policies (independent communications):
#   - loadbalance
#   - reachability
#   - reply-reachability
#   - waypoint
#
[[policies]]
    type = "loadbalance"
    final_node = "node name regex"
    repeat = 0                      # optional, default: # of final nodes
    [policies.communication]
    protocol = "http" or "icmp-echo"
    pkt_dst = "x.x.x.x(/x)"
    owned_dst_only = true or false  # optional, default: true
    start_node = "node name regex"
[[policies]]
    type = "reachability"
    final_node = "node name regex"
    reachable = true or false
    [policies.communication]
    protocol = "http" or "icmp-echo"
    pkt_dst = "x.x.x.x(/x)"
    owned_dst_only = true or false  # optional, default: true
    start_node = "node name regex"
[[policies]]
    type = "reply-reachability"
    query_node = "node name regex"
    reachable = true or false
    [policies.communication]
    protocol = "http" or "icmp-echo"
    pkt_dst = "x.x.x.x(/x)"
    owned_dst_only = true or false  # optional, default: true
    start_node = "node name regex"
[[policies]]
    type = "waypoint"
    waypoint = "node name regex"
    pass_through = true or false
    [policies.communication]
    protocol = "http" or "icmp-echo"
    pkt_dst = "x.x.x.x(/x)"
    owned_dst_only = true or false  # optional, default: true
    start_node = "node name regex"

#
# Multi-communication policies (multiple, simultaneous communications):
#   - one-request
#
[[policies]]
    type = "one-request"
    server_node = "node name regex"
    [[policies.communications]]
    protocol = "http" or "icmp-echo"
    pkt_dst = "x.x.x.x(/x)"
    owned_dst_only = true or false  # optional, default: true
    start_node = "node name regex"

#
# Policies with multiple single-communication correlated policies (multiple,
# sequential communications with their own policies):
#   - conditional
#   - consistency
#
[[policies]]
    type = "conditional"
    [[policies.correlated_policies]]
    # any single-communication policies
[[policies]]
    type = "consistency"
    [[policies.correlated_policies]]
    # any single-communication policies
