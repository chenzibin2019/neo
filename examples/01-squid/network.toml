[[nodes]]
    nmae = "h0"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "192.168.0.2/24"
    [[nodes.static_routes]]
    network = "0.0.0.0/0"
    next_hop = "192.168.0.1" 
[[nodes]]
    nmae = "h1"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "192.168.0.3/24"
    [[nodes.static_routes]]
    network = "0.0.0.0/0"
    next_hop = "192.168.0.1" 
    
# use transparent proxy here
# the intercept router is combined into the squid proxy, and the intercept functionality should be enabled 
# to route the packet and change the dest address
# 1. kernel functionality for forwarding the packet: net.ipv4.ip_forward = 1(should be defaultly true)
# 2. add redirect packet to squid server: 
#   iptables -t nat -A PERROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 9999

# first proxy server
# parameter prefer_direct has value either: "on" or "off"
[[nodes]] 
    name = "p0"
    type = "middlebox"
    env = "netns"
    app = "squid-proxy"
    prefer_direct = "on"
    config = """
    *nat
    :PREROUTING ACCEPT [0:0]
    :INPUT ACCEPT [0:0]
    :OUTPUT ACCEPT [0:0]
    :POSTROUTING ACCEPT [0:0] 
    -A PERROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3128
    COMMIT    

    *squid
    acl SSL_ports port 443    # https
    acl Safe_ports port 80    # http
    acl Safe_ports port 21    # ftp
    acl Safe_ports port 443   # https
    acl Safe_ports port 70    # gopher
    acl Safe_ports port 210   # wais
    acl Safe_ports port 1025-65535  # unregistered ports
    acl Safe_ports port 280   # http-mgmt
    acl Safe_ports port 488   # gss-http
    acl Safe_ports port 591   # filemaker
    acl Safe_ports port 777   # multiling http
    acl CONNECT method CONNECT
    http_access deny !Safe_ports
    http_access deny CONNECT !SSL_ports
    http_access allow localhost manager
    http_access deny manager
    http_access allow localhost
    http_access allow all
    
    access_log stdio:/home/leon/neo/examples/configs/squid/log/access.0.log squid
    cache_log /home/leon/neo/examples/configs/squid/log/cache.0.log
    pinger_enable off
    pid_filename /home/leon/neo/examples/configs/squid/squid.0.pid
    
    http_port 3128
    http_port 9999 intercept
    icp_access allow all 
    icp_port 3130

    cache_peer squid.host.2 sibling 3128 3130
    cache_peer_access squid.host.2 allow all
    visible_hostname squid.host.1
    """
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "192.168.1.2/25"
    [[nodes.interfaces]]
    name = "eth1"
    ipv4 = "192.168.1.129/25"
    [[nodes.interfaces]]
    name = "eth2"
    ipv4 = "192.168.3.1/24"
    [[nodes.static_routes]]
    network = "192.168.3.0/24"
    next_hop = "192.168.3.2"
    [[nodes.static_routes]]
    network = "192.168.1.128/25"
    next_hop = "192.168.1.130"
    [[nodes.static_routes]]
    network = "192.168.0.0/24"
    next_hop = "192.168.1.130"
    [[nodes.static_routes]]
    network = "0.0.0.0/0"
    next_hop = "192.168.1.1"
# second proxy
[[nodes]]
    name = "p1"
    type = "middlebox"
    env = "netns"
    app = "squid-proxy"
    prefer_direct = "on"
    config = """
    *nat
    :PREROUTING ACCEPT [0:0]
    :INPUT ACCEPT [0:0]
    :OUTPUT ACCEPT [0:0]
    :POSTROUTING ACCEPT [0:0] 
    -A PERROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3128
    COMMIT 

    *squid
    acl SSL_ports port 443    # https
    acl Safe_ports port 80    # http
    acl Safe_ports port 21    # ftp
    acl Safe_ports port 443   # https
    acl Safe_ports port 70    # gopher
    acl Safe_ports port 210   # wais
    acl Safe_ports port 1025-65535  # unregistered ports
    acl Safe_ports port 280   # http-mgmt
    acl Safe_ports port 488   # gss-http
    acl Safe_ports port 591   # filemaker
    acl Safe_ports port 777   # multiling http
    acl CONNECT method CONNECT
    http_access deny !Safe_ports
    http_access deny CONNECT !SSL_ports
    http_access allow localhost manager
    http_access deny manager
    http_access allow localhost
    http_access allow all
    
    access_log stdio:/home/leon/neo/examples/configs/squid/log/access.1.log squid
    cache_log /home/leon/neo/examples/configs/squid/log/cache.1.log
    pinger_enable off
    pid_filename /home/leon/neo/examples/configs/squid/squid.1.pid
    
    http_port 3128
    http_port 9999 intercept
    icp_access allow all 
    icp_port 3130

    cache_peer squid.host.1 sibling 3128 3130
    cache_peer_access squid.host.1 allow all
    visible_hostname squid.host.2
    """
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "192.168.2.2/25"
    [[nodes.interfaces]]
    name = "eth1"
    ipv4 = "192.168.2.129/25"
    [[nodes.interfaces]]
    name = "eth2"
    ipv4 = "192.168.3.2/24"
    [[nodes.static_routes]]
    network = "192.168.3.0/24"
    next_hop = "192.168.3.1"
    [[nodes.static_routes]]
    network = "192.168.2.128/25"
    next_hop = "192.168.2.130"
    [[nodes.static_routes]]
    network = "192.168.0.0/24"
    next_hop = "192.168.2.130"
    [[nodes.static_routes]]
    network = "0.0.0.0/0"
    next_hop = "192.168.2.1"
# firewall configuration, use NAT 
[[nodes]]
    name = "fw"
    type = "middlebox"
    env = "netns"
    app = "nat-gate"
    rp_filter = 0
    config = """
    *nat
    :PREROUTING ACCEPT [0:0]
    :INPUT ACCEPT [0:0]
    :OUTPUT ACCEPT [0:0]
    :POSTROUTING ACCEPT [0:0]
    -A POSTROUTING -s 192.168.0.0/22 -o eth0 -j MASQUERADE
    COMMIT
    """
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "10.0.0.2/24"
    [[nodes.interfaces]]
    name = "eth1"
    ipv4 = "192.168.1.1/25"
    [[nodes.interfaces]]
    name = "eth2"
    ipv4 = "192.168.2.1/25"
    [[nodes.static_routes]]
    network = "192.168.1.0/25"
    next_hop = "192.168.1.2"
    [[nodes.static_routes]]
    network = "192.168.1.128/25"
    next_hop = "192.168.1.2"
    [[nodes.static_routes]] 
    network = "192.168.2.0/25"
    next_hop = "192.168.2.2"
    [[nodes.static_routes]]
    network = "192.168.2.128/25"
    next_hop = "192.168.2.2"
    [[nodes.static_routes]]
    network = "192.168.0.0/24"
    next_hop = "192.168.1.2"
    [[nodes.static_routes]] 
    network = "10.0.0.0/24"
    next_hop = "10.0.0.2"

# undeterministic router
[[nodes]]
    name = "r0"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "192.168.1.130/25"
    [[node.interfaces]]
    name = "eth1"
    ipv4 = "192.168.2.130/25"
    [[nodes.interfaces]]
    name = "eth2"
    ipv4 = "192.168.0.1/24"
    [[nodes.static_routes]]
    network = "192.168.0.0/24"
    next_hop = "192.168.0.1"
    [[nodes.static_routes]]
    network = "0.0.0.0/0"
    next_hop = "192.168.1.129/25"
    [[noeds.static_routes]]
    network = "0.0.0.0/0"
    next_hop = "192.168.2.129/25"

# switch
[[nodes]]
    name = "s1"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    [[nodes.interfaces]]
    name = "eth1"
    [[nodes.interfaces]]
    name = "eth2"
#server
[[nodes]]
    name = "s0"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "10.0.0.1/24"
    [[nodes.static_routes]]
    network = "192.168.0.0/16"
    next_hop = "10.0.0.2"
    [[nodes.static_routes]]
    network = "0.0.0.0/0"
    next_hop = "10.0.0.100"
    
    
# linkage 
[[link]]
    node1 = "s0"
    intf1 = "eth0"
    node2 = "fw"
    intf = "eth0"
[[link]]
    node1 = "fw"
    intf1 = "eth1"
    node2 = "p0"
    intf2 = "eth0"
[[link]] 
    node1 = "fw"
  intf1 = "eth2"
    node2 = "p1"
    intf2 = "eth0"
[[link]] 
    node1 = "p0"
  intf1 = "eth1"
    node2 = "r0"
  intf2 = "eth0"
[[link]]
    node1 = "p1"
  intf1 = "eth1"
    node2 = "r0"
  intf2 = "eth1"
[[link]] 
  node1 = "p0"
  intf1 = "eth2"
  node2 = "p1"
  intf2 = "eth2"
[[link]] 
    node1 = "r0" 
  intf1 = "eth2"
    node2 = "s1"
  intf2 = "eth0"
[[link]]
    node1 = "s1"
  intf1 = "eth1"
    node2 = "h0"
  intf2 = "eth0"
[[link]]
    node1 = "s1"
  intf1 = "eth2"
    node2 = "h1"
  intf2 = "eth0"

# Policy:
#   1. Requested host should always be hit in cache among the proxies

# [[policies]]
#    type = "stateful-reachability"
#    host_dest = "10.0.0.1"
#    start_node = "h[01]"
#    final_node = "server"
# [[policies]]
#    type = "reachability"
#    pkt_dst = "10.0.0.1"
#    start_node = "h[01]"
#    final_node = "server"
#    reachable = true

